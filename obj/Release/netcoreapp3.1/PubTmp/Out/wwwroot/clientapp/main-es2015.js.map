{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./ClientApp/app/app.component.ts","./ClientApp/app/app.component.html","./ClientApp/app/app.module.ts","./ClientApp/app/checkout/checkout.component.ts","./ClientApp/app/checkout/checkout.component.html","./ClientApp/app/login/login.component.ts","./ClientApp/app/login/login.component.html","./ClientApp/app/shared/dataService.ts","./ClientApp/app/shared/order.ts","./ClientApp/app/shop/cart.component.ts","./ClientApp/app/shop/cart.component.html","./ClientApp/app/shop/productList.component.ts","./ClientApp/app/shop/productList.component.html","./ClientApp/app/shop/shop.component.ts","./ClientApp/app/shop/shop.component.html","./ClientApp/environments/environment.ts","./ClientApp/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl: \"./app.component.html\",\n  styles: []\n})\nexport class AppComponent {\n  title = 'Product List';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { ProductList } from './shop/productList.component';\nimport { DataService } from './shared/dataService';\r\nimport { Cart } from './shop/cart.component';\r\nimport { Checkout } from './checkout/checkout.component';\r\nimport { Login } from './login/login.component';\n\nimport { RouterModule } from \"@angular/router\";\nimport { Shop } from './shop/shop.component';\r\n\r\n\nlet routes = [\n    { path: \"\", component: Shop },\n    { path: \"checkout\", component: Checkout },\n    { path: \"login\", component: Login }\n];\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ProductList,\n        Cart,\n        Shop,\n        Checkout,\n        Login\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        FormsModule,\n        RouterModule.forRoot(routes, {\n            useHash: true,\r\n            enableTracing: false // for degguing of the routes\r\n        })\n    ],\n    providers: [\n        DataService\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from \"@angular/core\";\r\nimport { DataService } from '../shared/dataService';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: \"checkout\",\r\n  templateUrl: \"checkout.component.html\",\r\n  styleUrls: ['checkout.component.css']\r\n})\r\nexport class Checkout {\r\n    errorMessage: string = \"\";\r\n\r\n    constructor(public data: DataService, public router: Router) {\r\n  }\r\n\r\n  onCheckout() {\r\n      // TODO\r\n      this.data.checkout()\r\n          .subscribe(success => {\r\n              if (success) {\r\n                  this.router.navigate([\"/\"]);\r\n              }\r\n          }, err => this.errorMessage = \"Failed to save order\");\r\n  }\r\n}","<div class=\"row\">\r\n    <div *ngIf=\"errorMessage\" class=\"alert alert-warning\">{{ errorMessage }}</div>\r\n  <h3>Confirm Order</h3>\r\n  <table class=\"table table-bordered table-hover\">\r\n    <tr *ngFor=\"let o of data.order.items\">\r\n      <td><img src=\"/img/{{ o.productArtId }}.jpg\" alt=\"o.productTitle\" class=\"img-thumbnail checkout-thumb\" /></td>\r\n      <td>{{ o.productCategory }}({{ o.productSize }}) - {{ o.productArtist }}: {{ o.productTitle }}</td>\r\n      <td>{{ o.quantity }}</td>\r\n      <td>{{ o.unitPrice|currency:'USD':true }}</td>\r\n      <td>{{ (o.unitPrice * o.quantity)|currency:'USD':true }}</td>\r\n    </tr>\r\n  </table>\r\n  <div class=\"col-md-4 col-md-offset-8 text-right\">\r\n    <table class=\"table table-condensed\">\r\n      <tr>\r\n        <td class=\"text-right\">Subtotal</td>\r\n        <td class=\"text-right\">{{ data.order.subtotal|currency:'USD':true }}</td>\r\n      </tr>\r\n      <tr>\r\n        <td class=\"text-right\">Shipping</td>\r\n        <td class=\"text-right\">$ 0.00</td>\r\n      </tr>\r\n      <tr>\r\n        <td class=\"text-right\">Total:</td>\r\n        <td class=\"text-right\">{{ data.order.subtotal|currency:'USD':true }}</td>\r\n      </tr>\r\n    </table>\r\n    <button class=\"btn btn-success\" (click)=\"onCheckout()\">Complete Purchase</button>\r\n    <a routerLink=\"/\" class=\"btn btn-info\">Cancel</a>\r\n  </div>\r\n</div>","import { Component } from \"@angular/core\";\r\nimport { DataService } from '../shared/dataService';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n\tselector: \"login\",\r\n\ttemplateUrl: \"login.component.html\"\r\n})\r\nexport class Login {\r\n    errorMessage: string = \"\";\r\n\r\n\tconstructor(private data: DataService, private router: Router) { }\r\n\r\n\tpublic creds = {\r\n\t\tusername: \"\",\r\n\t\tpassword: \"\"\r\n\t};\r\n\r\n\tonLogin() {\r\n\t\t// Call the login service\r\n\t\tthis.data.login(this.creds)\r\n\t\t\t.subscribe(success => {\r\n\t\t\t\tif (success) {\r\n\t\t\t\t\tif (this.data.order.items.length == 0) {\r\n\t\t\t\t\t\tthis.router.navigate([\"\"]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.router.navigate([\"checkout\"]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, err => this.errorMessage = \"Failed to loign\")\r\n\t}\r\n}","<div class=\"row\">\r\n  <div class=\"col-md-4 col-md-offset-4\">\r\n      <div *ngIf=\"errorMessage\" class=\"alert alert-warning\">{{ errorMessage }}</div>\r\n    <form (submit)=\"onLogin()\" #thisForm=\"ngForm\" novalidate>\r\n      <div class=\"form-group\">\r\n        <label for=\"username\">Username</label>\r\n        <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"creds.username\" #username=\"ngModel\" required />\r\n          <div class=\"text-danger\" *ngIf=\"username.touched && username.invalid && username.errors.required\">Username is required!</div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"creds.password\" #password=\"ngModel\" required />\r\n          <div class=\"text-danger\" *ngIf=\"password.touched && password.invalid && password.errors.required\">Password is required!</div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input type=\"submit\" class=\"btn btn-success\" value=\"Login\" [disabled]=\"thisForm.invalid\" />\r\n        <a routerLink=\"/\" class=\"btn btn-default\">Cancel</a>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from 'rxjs/operators';\r\nimport { Product } from  \"./product\";\r\nimport { Order, OrderItem } from './order';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    private token: string = \"\";\r\n    private tokenExpiration: Date;\r\n\r\n    public order: Order = new Order();\r\n\r\n    public products: Product[] =[];\r\n\r\n    loadProducts(): Observable<boolean> {\r\n        return this.http.get(\"/api/products\")\r\n            .pipe(\r\n                map<any[],boolean>((data: any[]): boolean => {\r\n                    this.products = data;\r\n                    return true;\r\n                })\r\n            );\r\n    }\r\n\r\n    public get loginRequired(): boolean {\r\n        return this.token.length == 0 || this.tokenExpiration > new Date();\r\n\r\n    }\r\n\r\n    login(creds): Observable<boolean> {\r\n        return this.http\r\n            .post(\"/account/createtoken\", creds)\r\n            .pipe(\r\n                map((data: any) => {\r\n                    this.token = data.token;\r\n                    this.tokenExpiration = data.expiration;\r\n                    return true;\r\n                })\r\n            );\r\n    }\r\n\r\n    public checkout() {\r\n        if (!this.order.orderNumber) {\r\n            this.order.orderNumber = this.order.orderDate.getFullYear().toString() + this.order.orderDate.getTime().toString();\r\n        }\r\n        return this.http.post(\"/api/orders\", this.order, {\r\n            headers: new HttpHeaders().set(\"Authorization\", \"Bearer \" + this.token)\r\n        })\r\n            .pipe(\r\n                map(response => {\r\n                    this.order = new Order();\r\n                    return true;\r\n                })\r\n            );\r\n    }\r\n\r\n    public addToOrder(newProduct: Product) {\r\n\r\n        let item: OrderItem = this.order.items.find(i => i.productId == newProduct.id);\r\n\r\n        if (item) {\r\n            item.quantity++;\r\n\r\n        }\r\n        else {\r\n\r\n            item = new OrderItem();\r\n\r\n            item.productId = newProduct.id;\r\n            item.productArtist = newProduct.artist;\r\n            item.productArtId = newProduct.artId;\r\n            item.productCategory = newProduct.category;\r\n            item.productSize = newProduct.size;\r\n            item.productTitle = newProduct.title;\r\n            item.unitPrice = newProduct.price;\r\n\r\n            item.quantity = 1;\r\n\r\n            this.order.items.push(item);\r\n        }\r\n    }\r\n}","import * as _ from \"lodash\";\r\n\r\nexport class Order {\r\n    orderId: number;\r\n    orderDate: Date = new Date();\r\n    orderNumber: string;\r\n    items: Array<OrderItem> = new Array<OrderItem>();\r\n\r\n    get subtotal(): number {\r\n        return _.sum(_.map(this.items, i => i.unitPrice * i.quantity));\r\n    };\r\n\r\n}\r\n\r\nexport class OrderItem {\r\n    id: number;\r\n    quantity: number;\r\n    unitPrice: number;\r\n    productId: number;\r\n    productCategory: string;\r\n    productSize: string;\r\n    productPrice: number;\r\n    productTitle: string;\r\n    productArtist: string;\r\n    productArtId: string;\r\n}\r\n\r\n","import { Component } from \"@angular/core\";\r\nimport { DataService } from '../shared/dataService';\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: \"the-cart\",\r\n    templateUrl: \"cart.component.html\",\r\n    styleUrls: []\r\n})\r\n\r\nexport class Cart {\r\n\r\n    constructor(public data: DataService, private router: Router) { }\r\n\r\n\r\n    onCheckout() {\r\n        if (this.data.loginRequired) {\r\n            // Force login\r\n            this.router.navigate([\"login\"]);\r\n        } else {\r\n            this.router.navigate([\"checkout\"])\r\n            // Go to checkout\r\n        }\r\n    }\r\n}","<h3>Shopping Cart</h3>\r\n<div>#/Items: {{ data.order.items.length }} </div>\r\n<div>Subtotal: {{ data.order.subtotal | currency:\"AUD\":true   }}</div>\r\n<table class=\"table table-sm table-hover\">\r\n    <thead>\r\n        <tr>\r\n            <td>Product</td>\r\n            <td>#</td>\r\n            <td>$</td>\r\n            <td>Total</td>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let o of data.order.items\">\r\n            <td>{{  o.productCategory }} - {{ o.productTitle }}</td>\r\n            <td>{{  o.quantity }}</td>\r\n            <td>{{  o.unitPrice | currency:\"AUD\":true  }}</td>\r\n            <td>{{  (o.unitPrice * o.quantity ) | currency:\"AUD\":true }}</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<button class=\"btn btn-success\" *ngIf=\"data.order.items.length > 0\" (click)=\"onCheckout()\">Checkout</button>","import { Component, OnInit } from \"@angular/core\";\r\nimport { DataService } from '../shared/dataService';\r\nimport { Product } from '../shared/product';\r\n\r\n@Component({\r\n    selector: \"product-list\",\r\n    templateUrl: \"productList.component.html\",\r\n    styleUrls: [ \"productList.component.css\"]\r\n})\r\nexport class ProductList implements OnInit {\r\n    constructor(private data: DataService) {\r\n        this.products = data.products;\r\n    }\r\n\r\n    public products: Product[] = []\r\n\r\n    ngOnInit(): void {\r\n        this.data.loadProducts()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.products = this.data.products\r\n                }\r\n            })\r\n    }\r\n\r\n    addProduct(product: Product) {\r\n        this.data.addToOrder(product);\r\n    }\r\n}","<div class=\"row\">\r\n\r\n    <div class=\"product-info col-md-4\" *ngFor=\"let p of products\">\r\n        <div class=\"card bg-light p-1 m-1\">\r\n            <img src=\"/img/{{ p.artId }}.jpg\" class=\"img-fluid\" [alt]=\"p.title\" />\r\n            <div class=\"product-name\">{{ p.category }} - {{ p.size }}</div>\r\n            <ul class=\"product-props list-unstyled\">\r\n                <li><strong>Price</strong>: {{ p.price | currency:\"AUD\":true }}</li>\r\n                <li><strong>Artist</strong>:{{ p.artist }}</li>\r\n                <li><strong>Title</strong>: {{ p.title }}</li>\r\n                <li><strong>Description</strong>: {{ p.artDescription }}</li>\r\n            </ul>\r\n            <button id=\"buyButton\" class=\"btn btn-success btn-sm pull-right\" (click)=\"addProduct(p)\">Buy</button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component } from \"@angular/core\";\r\n\r\n\r\n@Component({\r\n    selector: \"the-shop\",\r\n    templateUrl: \"shop.component.html\"\r\n})\r\nexport class Shop {\r\n    title = \"Shop\"\r\n\r\n}","<div class=\"row\">\r\n    <div class=\"col-md-9\">\r\n        <h3>{{ title }}</h3>\r\n        <product-list></product-list>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n        <div class=\"card bg-light p-2\">\r\n            <the-cart></the-cart>\r\n        </div>\r\n    </div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}